package main;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author NoeOGM
 */
import java.beans.PropertyVetoException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import sqlite.Sqlite;
public class Iagendar extends javax.swing.JInternalFrame {

    
    DefaultTableModel model ;
    private principal fmain;
    private Sqlite db; 
    private int indexClase;
    private int indexTema;
    public Iagendar(principal fmain, Sqlite db) {
        this.fmain= fmain;
        this.db= db;
        initComponents();
        this.model = (DefaultTableModel) this.tblActividades.getModel();
               
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
      @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblActividades = new javax.swing.JTable();
        cboxClases = new javax.swing.JComboBox<>();
        cboxTemas = new javax.swing.JComboBox<>();
        cboxSubtemas = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        setPreferredSize(new java.awt.Dimension(1019, 532));
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        tblActividades.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Test", "Test", "Test"}
            },
            new String [] {
                "Tema", "Asignatura", "Fecha"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblActividades.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tblActividadesMousePressed(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblActividadesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblActividades);

        cboxClases.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboxClasesActionPerformed(evt);
            }
        });

        cboxTemas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboxTemasActionPerformed(evt);
            }
        });

        cboxSubtemas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboxSubtemasActionPerformed(evt);
            }
        });

        jButton1.setText("Agendar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Clases");

        jLabel2.setText("Temas");

        jLabel3.setText("Subtemas");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 993, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(325, 325, 325)
                                .addComponent(jButton1))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cboxSubtemas, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cboxTemas, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cboxClases, javax.swing.GroupLayout.PREFERRED_SIZE, 779, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboxClases, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboxTemas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboxSubtemas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblActividadesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblActividadesMouseClicked
//        int row, col;
//        row=this.jTable1.getSelectedRow();
//        col=this.jTable1.getSelectedColumn();
//        String data =this.jTable1.getValueAt(row,col).toString();
//        
//        Iestudio fEstudio = new Iestudio(data);
//        fmain.add(fEstudio);
        
    }//GEN-LAST:event_tblActividadesMouseClicked

    private void tblActividadesMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblActividadesMousePressed
        int row, col;
        row=this.tblActividades.getSelectedRow();
        col=this.tblActividades.getSelectedColumn();
        String data =this.tblActividades.getValueAt(row,col).toString();
        Iestudio fEstudio = new Iestudio(data);
        fmain.addInternal(fEstudio);        
    }//GEN-LAST:event_tblActividadesMousePressed

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        this.cboxClases.addItem(fmain.getTBLclases().getValueAt(0,1).toString());  
        //Cargar actividades anteriores
        
    }//GEN-LAST:event_formInternalFrameOpened

    private void cboxTemasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboxTemasActionPerformed

        //Extraer el id de la clase y del tema seleccionado
        indexClase= this.cboxClases.getSelectedIndex();
        indexTema= this.cboxTemas.getSelectedIndex();
        
            String idClase= fmain.getTBLclases().getValueAt(indexClase,0).toString();
            String idTema= fmain.getTBLtemas().getValueAt(indexTema,0).toString();
            //Extraer los subtemas de la clase seleccionada
            String cSubtemas[]={"id_subtema","id_tema", "id_clase","titulo"};
            fmain.extractColumns("subtemas", cSubtemas, fmain.getTBLsubtemas(), "WHERE id_clase="+idClase + " and id_tema= "+ idTema);

            //Mostrar los subtemas de la clase seleccionada en el cboxTemas
             int indexTblSubtemas = fmain.getTBLsubtemas().getRowCount();

            for(int c=0; c<indexTblSubtemas; c++){
                this.cboxSubtemas.addItem(fmain.getTBLsubtemas().getValueAt(c,1).toString());
            }
        
        
    }//GEN-LAST:event_cboxTemasActionPerformed

    private void cboxSubtemasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboxSubtemasActionPerformed
        
        
        
    }//GEN-LAST:event_cboxSubtemasActionPerformed

    private void cboxClasesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboxClasesActionPerformed
        //Extraer el id de la clase y del tema seleccionado
        indexClase= this.cboxClases.getSelectedIndex();
            String idClase= fmain.getTBLclases().getValueAt(indexClase,0).toString();
            //Extraer los subtemas de la clase seleccionada
            String cTemas[]={"id_tema","nombre_tema"};
            fmain.extractColumns("temas", cTemas, fmain.getTBLtemas(), "WHERE id_clase="+idClase);
            
            //Mostrar los temas de la clase seleccionada en el cboxTemas
         int indexTblTemas = fmain.getTBLtemas().getRowCount();
                
        for(int c=0; c<indexTblTemas; c++){
            this.cboxTemas.addItem(fmain.getTBLtemas().getValueAt(c,1).toString());
        }

    }//GEN-LAST:event_cboxClasesActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String fecha = "20/08/2020";
        String idSubtema= fmain.getTBLsubtemas().getValueAt(this.cboxSubtemas.getSelectedIndex(),0).toString();
        String preQuery= "INSERT INTO actividades(fecha, id_subtema) VALUES(%s,%s)";
        String query= String.format(preQuery,fecha,idSubtema);
        db.setQuery(query);
        
        //Mostrar Subtema Recien Añadido
        String titulo = (String) this.cboxSubtemas.getSelectedItem();
        String clase = (String) this.cboxClases.getSelectedItem();
        model.addRow(new Object[]{titulo,fecha, clase});
        
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cboxClases;
    private javax.swing.JComboBox<String> cboxSubtemas;
    private javax.swing.JComboBox<String> cboxTemas;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblActividades;
    // End of variables declaration//GEN-END:variables
}
